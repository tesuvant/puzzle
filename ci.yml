variables:
  - group: myGroup
trigger:
  batch: true
  branches:
    include:
    - *
    paths:
      include:
      - *.tf
      - *.tfvars
pool:
  name: 'myPool'
stages:
- stage: CodeCheck
  displayName: CodeCheck
  jobs:
  - job: CodeCheck
    displayName: 'Terraform Code Check'
    container:
    image: $(image)
    endpoint: 'hub'
    steps:
    - checkout: self
    - task: AzureKeyVault@1
      inputs:
      azureSubscription: 'personal'
      KeyVaultName: 'my-kv'
      SecretsFilter: 'SP, SpSecret'
      RunAsPreJob: true
    - task: Bash@3
      displayName: 'tflint'
      inputs:
        targetType: 'inline'
        script: tflint $(git log --name-only -1 --oneline | grep ".tf$")
    - task: AzureCLI@2
      name: TfStep
      displayName: 'terraform plan'
      inputs:
        addSpnToEnvironment: true
        azureSubscription: 'personal'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          terraform init -input=false
          terraform plan -input=false -detailed-exitcode -out tfplan.out
          echo "##vso[task.setvariable variable=exit;isOutput=true]$?"
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Plan Output'
      inputs:
        PathtoPublish: .
        ArtifactName: 'tfplan'
- stage: TerraformApply
  displayName: Terraform Apply
  dependsOn:
    - CodeCheck
  condition: |
    and(
      succeeded('CodeCheck'),
      eq(variables['Build.SourceBranch'], 'refs/heads/master'),
      eq(dependencies.TfCodeCheck.outputs['TfCodeCheck.TfStep.exitcode'], '2')
    )
  jobs:
  - deployment: terraform_apply
    environment: wsafwst_stable
    container:
      image: $(image)
      endpoint: 'hub'
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: none
              - task: DownloadBuildArtifacts@0
              displayName: 'Download plan'
              inputs:
                buildType: 'current'
                artifactName: tfplan
                downloadType: single
                downloadPath: '.'
              - task: AzureKeyVault@1
                inputs:
                  azureSubscription: 'personal'
                  KeyVaultName: 'my-kv'
                  SecretsFilter: 'SP,SpSecret'
                  RunAsPreJob: true
              - task: AzureCLI@2
                displayName: 'terraform apply'
                inputs:
                  addSpnToEnvironment: true
                  azureSubscription: 'personal'
                  scriptType: bash
                  failOnStandardError: true
                  workingDirectory: tfplan
                  scriptLocation: inlineScript
                  inlineScript: |
                    terraform apply -input=false
